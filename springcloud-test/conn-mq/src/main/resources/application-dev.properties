server.port=8030

spring.application.name=con-mq
server.use.url=127.0.0.1

eureka.client.serviceUrl.defaultZone=http://root:root@${server.use.url}:8002/eureka/,http://root:root@${server.use.url}:8003/eureka/,http://root:root@${server.use.url}:8001/eureka/

server.use.url-redis-vm=192.168.87.128
server.use.url-rabbitmq-vm=192.168.75.130
#####################redis
spring.redis.database=0
spring.redis.host=${server.use.url-redis-vm}
spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接超时时间（毫秒）
spring.redis.timeout=10000
#####################redis

#####################rabbitmq
spring.rabbitmq.addresses=${server.use.url-rabbitmq-vm}:5672
spring.rabbitmq.username=test
spring.rabbitmq.password=test
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=15000
spring.rabbitmq.publisher-returns=true
#手动确认消息
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=10

#spring.rabbitmq.publisher-confirms=true

#如果队列中有两条以上未签收的消息，则不进行新的消息消费。 用于消息限流 手动签收才会有效果
#spring.rabbitmq.listener.simple.prefetch=2
# 开启重试
spring.rabbitmq.listener.simple.retry.enabled=true
# 重试次数,默认为3次
spring.rabbitmq.listener.simple.retry.max-attempts=3
#####################rabbitmq

#开启认证
security.basic.enabled: false
#认证的用户名,比如root
spring.security.user.name=root
spring.security.user.password=rootpwd


